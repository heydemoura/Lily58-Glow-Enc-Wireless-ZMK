/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LA(A)>, <&kp BSLH>, <&kp PIPE>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LA(O)>, <&kp SEMI>, <&kp COLON>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LA(SQT)>, <&kp SQT>, <&kp DQT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  BSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   Mute |  | LOCK  |  N   |  M    |  ,    |  .   |   /   |   =   |
//                     | ALT  | LGUI | LWR  |  SPACE |  | ENTER | RAISE|       | DEL   |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp BSLH
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp C_MUTE   &kp K_LOCK  &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp EQUAL
                        &kp LALT  &kp LGUI  &mo 1  &kp SPACE  &kp RET  &tog 2  &none  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |   €  |                   |   F1 |   F2  |   F3  |  [   |   ]   |  BSPC |
// |       |     | UP  |      |      |      |                   |  F4  |  F5   |  F6   |  F10 |  F11  |  F12  |
// |       |  LF |  DN |  RT  |  $   |  %   |                   |  F7  |  F8   |  F9   |  (   |   )   |   `   |
// |       |     |     |      |      |  ~   |        |  |       |      |       |  {    |  }   |   _   |   -   |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &kp LS(LA(2))                 &kp F1    &kp F2    &kp F3    &kp LBKT   &kp RBKT   &kp BSPC
&trans     &trans           &kp UP            &trans            &trans       &trans               &kp F4    &kp F5    &kp F6    &kp F10    &kp F11    &kp F12
&trans  &kp LEFT         &kp DOWN            &kp RIGHT          &kp DOLLAR   &kp PRCNT                   &kp F7    &kp F8    &kp F9    &kp LPAR   &kp RPAR   &kp GRAVE
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &kp TILDE    &trans   &trans    &trans    &trans &kp LBRC  &kp RBRC  &kp UNDERSCORE  &kp MINUS
                                              &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  BSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   Å   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   Ø   |   Æ   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   Mute |  | LOCK  |  N   |  M    |  ,    |  .   |   /   |   =   |
//                     | ALT  | LGUI | LWR  |  SPACE |  | ENTER | RAISE|       | DEL   |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &td0
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &td1  &td2
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp C_MUTE   &kp K_LOCK  &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp EQUAL
                        &kp LALT  &kp LGUI  &mo 1  &kp SPACE  &kp RET  &tog 2  &trans &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
